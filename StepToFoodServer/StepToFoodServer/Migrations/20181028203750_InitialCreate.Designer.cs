// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using StepToFoodServer;
using System;

namespace StepToFoodServer.Migrations
{
    [DbContext(typeof(FoodContext))]
    [Migration("20181028203750_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026");

            modelBuilder.Entity("StepToFoodServer.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AuthorId");

                    b.Property<double>("Calorie");

                    b.Property<double>("Carbohydrates");

                    b.Property<string>("Description");

                    b.Property<double>("Fat");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<double>("Protein");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("StepToFoodServer.Models.LikeFood", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("FoodId");

                    b.HasKey("UserId", "FoodId");

                    b.HasIndex("FoodId");

                    b.ToTable("LikeFood");
                });

            modelBuilder.Entity("StepToFoodServer.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("StepToFoodServer.Models.ProductFood", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("FoodId");

                    b.HasKey("ProductId", "FoodId");

                    b.HasIndex("FoodId");

                    b.ToTable("ProductFood");
                });

            modelBuilder.Entity("StepToFoodServer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Token");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StepToFoodServer.Models.Food", b =>
                {
                    b.HasOne("StepToFoodServer.Models.User", "Author")
                        .WithMany("AddedFoods")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StepToFoodServer.Models.LikeFood", b =>
                {
                    b.HasOne("StepToFoodServer.Models.Food", "Food")
                        .WithMany("LikeFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StepToFoodServer.Models.User", "User")
                        .WithMany("LikeFoods")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("StepToFoodServer.Models.ProductFood", b =>
                {
                    b.HasOne("StepToFoodServer.Models.Food", "Food")
                        .WithMany("ProductFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("StepToFoodServer.Models.Product", "Product")
                        .WithMany("ProductFoods")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
